# @format

openapi: "3.0.2"
info:
  title: Wallet budget api
  version: "1.0"
  description: this is an api speculation about the application wallet budget
servers:
  - url: https://WalletBudget.com
paths:
  /Accounts:
    get:
      tags:
        - "Accounts"
      summary: Retrieve all account 
      description: A list of account


      responses:
        200:
          description: A list of accounts
          content:
            application/json:
               schema:
                  type: array
                  items:
                   $ref: "#/components/schemas/Account"
                   
    post:
      tags:
        - "Accounts"
      summary: Create a new account
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Account"
      responses:
        '201':
          description: Account created successfully
        '400':
          description: Bad request


  /accounts/{accountId}:
    
    parameters:
      - name: accountId
        in: path
        required: true
        description: ID of the account
        schema:
          type: integer
    get:
      tags:
        - "Accounts"
      summary: Retrieve account details by id
      responses:
        '200':
          description: Account details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Account"
        '404':
          description: Account not found
    put:
      tags:
        - "Accounts"
      summary: Update account details
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Account"
      responses:
        '200':
          description: Account updated successfully
        '404':
          description: Account not found
        '400':
          description: Bad request

    delete:
      tags:
        - "Accounts"
      summary: Delete an account by id
      responses:
        '204':
          description: Account deleted successfully
        '404':
          description: Account not found


  /transactions:
    get:
      tags:
        - "Transactions"
      summary: Retrieve all transactions
      responses:
        '200':
          description: A list of transactions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Transaction"
    post:
      tags:
        - "Transactions"
      summary: Create a new transaction
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Transaction"
      responses:
        '201':
          description: Transaction created successfully
        '400':
          description: Bad request

  /transactions/{transactionId}:
    parameters:
      - name: transactionId
        in: path
        required: true
        description: ID of the transaction
        schema:
          type: integer
    get:
      tags:
        - "Transactions"
      summary: Retrieve transaction details by id
      responses:
        '200':
          description: Transaction details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Transaction"
        '404':
          description: Transaction not found
    put:
      tags:
        - "Transactions"
      summary: Update transaction details by id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Transaction"
      responses:
        '200':
          description: Transaction updated successfully
        '404':
          description: Transaction not found
        '400':
          description: Bad request
    delete:
      tags:
        - "Transactions"
      summary: Delete a transaction by id
      responses:
        '204':
          description: Transaction deleted successfully
        '404':
          description: Transaction not found



components:
  schemas:
    Account:
      type: object
      allOf:
        - $ref: "#/components/schemas/UserAccount"
        - type: object
  
    Transaction:
        type: object
        properties:
          id:
           type: integer
          description: 
           type: string
          amount:
           type: integer
          currency:
            type: string
          accountId:
            type: integer
          account: 
            $ref: "#/components/schemas/Account"



    UserAccount:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        balance:
          type: number
          format: float
        currency:
          type: string
      
        
